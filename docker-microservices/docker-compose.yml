version: '3.3'

services:
  ui:
    image: ${DOCKER_USER}/reddit_ui:${UI_VERSION}
    environment:
      POST_SERVICE_HOST: post
      POST_SERVICE_PORT: 5000
      COMMENT_SERVICE_HOST: comment
      COMMENT_SERVICE_PORT: 9292
    ports:
      - ${EXTERNAL_PORT}:9292
    networks:
      - frontend
  post:
    image: ${DOCKER_USER}/reddit_post:${POST_VERSION}
    environment:
      POST_DATABASE_HOST: reddit_db
      POST_DATABASE: posts
    networks:
      - frontend
      - backend

  comment:
    image: ${DOCKER_USER}/reddit_comment:${COMMENT_VERSION}
    environment:
      COMMENT_DATABASE_HOST: reddit_db
      COMMENT_DATABASE: comments
    networks:
      - frontend
      - backend

  reddit_db:
    image: mongo:3.2
    volumes:
      - reddit_db:/data/db
    networks:
      - backend

  prometheus:
    build: ./prometheus
    image: ${DOCKER_USER}/reddit_prometheus:${REDDIT_PROMETHEUS_VERSION}
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
    networks:
      - frontend
      - backend
      - observability

  node-exporter:
    image: prom/node-exporter:v0.15.2
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - observability

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.14.0
    networks:
      - frontend
      - backend
      - observability

  mongo-exporter:
    image: muryginm/mongodb-exporter:0.8.0
    command:
      - '--mongodb.uri=mongodb://reddit_db:27017'
    networks:
      - backend
      - observability

  cadvisor:
    image: google/cadvisor:v0.29.0
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      - observability

  grafana:
    image: ${DOCKER_USER}/reddit_grafana:${REDDIT_GRAFANA_VERSION}
    build: ./grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - observability

  alertmanager:
    image: ${DOCKER_USER}/reddit_alertmanager:${REDDIT_ALERTMANAGER_VERSION}
    build: ./alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    depends_on:
      - prometheus
    ports:
      - 9093:9093
    networks:
      - observability

  fluentd:
    image: ${DOCKER_USER}/reddit_fluentd:${REDDIT_FLUENTD_VERSION}
    build: ./fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - frontend
      - backend
      - observability

  elasticsearch:
    image: elasticsearch:7.4.0
    environment:
      discovery.type: single-node
    expose:
      - 9200
    ports:
      - "9200:9200"
    networks:
      - observability

  kibana:
    image: kibana:7.4.0
    ports:
      - "5601:5601"
    networks:
      - observability

volumes:
  reddit_db:
  prometheus_data:
  grafana_data:

networks:
  frontend:
  backend:
  observability:
